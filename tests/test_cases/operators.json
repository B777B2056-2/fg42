{
  "test_suite": {
    "name": "operator_test_suite",
    "version": "1.0",
    "description": "算子测试套件",
    "test_cases": [
      {
        "name": "add_with_board_cast",
        "operator": {
          "name": "add"
        },
        "category": "arithmetic",
        "description": "带广播的加法运算",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [2, 3, 2],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [3, 2],
            "data": [7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 3, 2],
          "data": [8, 10, 12, 14, 16, 18, 14, 16, 18, 20, 22, 24]
        }
      },
      {
        "name": "negation",
        "operator": {
          "name": "neg"
        },
        "category": "arithmetic",
        "description": "取负运算",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3],
            "data": [1, 2, 3, 4, 5, 6]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 3],
          "data": [-1, -2, -3, -4, -5, -6]
        }
      },
      {
        "name": "outer",
        "operator": {
          "name": "outer"
        },
        "category": "arithmetic",
        "description": "外积运算",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [4],
            "data": [1, 2, 3, 4]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [3],
            "data": [1, 2, 3]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [4, 3],
          "data": [1, 2, 3, 2, 4, 6, 3, 6, 9, 4, 8, 12]
        }
      },
      {
        "name": "mul",
        "operator": {
          "name": "mul"
        },
        "category": "arithmetic",
        "description": "逐元素乘法运算",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [2, 2, 2],
            "data": [1, 2, 3, 4, 1, 2, 3, 4]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [2, 2],
            "data": [5, 6, 7, 8]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 2],
          "data": [5, 12, 21, 32, 5, 12, 21, 32]
        }
      },
      {
        "name": "matmul",
        "operator": {
          "name": "bmm"
        },
        "category": "linear_algebra",
        "description": "矩阵乘法",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [2, 1, 2],
            "data": [1, 2, 3, 4]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [2, 3],
            "data": [1, 2, 3, 4, 5, 6]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 1, 3],
          "data": [9, 12, 15, 19, 26, 33]
        }
      },
      {
        "name": "transpose_last_two_dims",
        "operator": {
          "name": "transpose",
          "dim_0": 1,
          "dim_1": 2
        },
        "category": "shape_manipulation",
        "description": "转置最后两个维度",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3, 2],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3],
          "data": [1, 3, 5, 2, 4, 6, 7, 9, 11, 8, 10, 12]
        }
      },
      {
        "name": "transpose_first_two_dims",
        "operator": {
          "name": "transpose",
          "dim_0": 0,
          "dim_1": 1
        },
        "category": "shape_manipulation",
        "description": "转置最前面两个维度",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3, 2],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [3, 2, 2],
          "data": [1, 2, 7, 8, 3, 4, 9, 10, 5, 6, 11, 12]
        }
      },
      {
        "name": "argmax",
        "operator": {
          "name": "argmax",
          "num_samples": 1
        },
        "category": "reduction",
        "description": "求最大值索引",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3],
            "data": [1, 2, 3, 4, 5, 6]
          }
        ],
        "expected_output": {
          "data_type": "int32",
          "shape": [2, 1],
          "data": [2, 2]
        }
      },
      {
        "name": "rotate_half",
        "operator": {
          "name": "rotate_half"
        },
        "description": "rope编码翻转",
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3, 2],
            "data": [1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 3, 2],
          "data": [-2,   1,  -4,   3,  -6,   5,  -8,   7, -10,   9, -12,  11]
        }
      },
      {
        "name": "cosine",
        "operator": {
          "name": "cosine"
        },
        "description": "cosine",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3],
            "data": [1, 2, 3, 4, 5, 6]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 3],
          "data": [0.5403, -0.4161, -0.9900, -0.6536,  0.2837,  0.9602]
        }
      },
      {
        "name": "sine",
        "operator": {
          "name": "sine"
        },
        "description": "sine",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 3],
            "data": [1, 2, 3, 4, 5, 6]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 3],
          "data": [0.8415,  0.9093,  0.1411, -0.7568, -0.9589, -0.2794]
        }
      },
      {
        "name": "concat_by_row",
        "operator": {
          "name": "concat_by_row"
        },
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 4, 3],
          "data": [1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,  7,  8,  9, 10, 11, 12,
            13, 14, 15, 16, 17, 18]
        }
      },
      {
        "name": "concat_by_col",
        "operator": {
          "name": "concat_by_col"
        },
        "data_types": ["int32", "bf16", "fp32"],
        "inputs": [
          {
            "name": "input_a",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12]
          },
          {
            "name": "input_b",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 6],
          "data": [1,  2,  3,  7,  8,  9,  4,  5,  6, 10, 11, 12,  7,  8,  9, 13, 14, 15,
            10, 11, 12, 16, 17, 18]
        }
      },
      {
        "name": "bf16_causal_mask",
        "operator": {
          "name": "causal_mask",
          "data_type": "bf16",
          "num_rows": 4,
          "num_cols": 5
        },
        "data_types": ["bf16"],
        "expected_output": {
          "data_type": "auto",
          "shape": [4, 5],
          "data": [0, -9999, -9999, -9999, -9999, 0, 0, -9999, -9999, -9999, 0, 0, 0, -9999, -9999, 0, 0, 0, 0, -9999]
        }
      },
      {
        "name": "fp32_causal_mask",
        "operator": {
          "name": "causal_mask",
          "data_type": "fp32",
          "num_rows": 4,
          "num_cols": 5
        },
        "data_types": ["fp32"],
        "expected_output": {
          "data_type": "auto",
          "shape": [4, 5],
          "data": [0, -9999, -9999, -9999, -9999, 0, 0, -9999, -9999, -9999, 0, 0, 0, -9999, -9999, 0, 0, 0, 0, -9999]
        }
      },
      {
        "name": "softmax",
        "operator": {
          "name": "softmax"
        },
        "category": "activation",
        "description": "Softmax激活函数",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3],
          "data": [0.0900, 0.2447, 0.6652, 0.0900, 0.2447, 0.6652, 0.0900, 0.2447, 0.6652, 0.0900, 0.2447, 0.6652]
        }
      },
      {
        "name": "sigmoid",
        "operator": {
          "name": "sigmoid"
        },
        "category": "activation",
        "description": "Sigmoid激活函数",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3],
          "data": [0.7311, 0.8808, 0.9526, 0.9820, 0.9933, 0.9975, 0.9991, 0.9997, 0.9999,
            1.0000, 1.0000, 1.0000]
        }
      },
      {
        "name": "silu",
        "operator": {
          "name": "silu"
        },
        "category": "activation",
        "description": "SiLU激活函数",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3],
          "data": [0.7311,  1.7616,  2.8577,  3.9281,  4.9665,  5.9852,  6.9936,  7.9973,
            8.9989,  9.9995, 10.9998, 11.9999]
        }
      },
      {
        "name": "rms_norm",
        "operator": {
          "name": "rms_norm",
          "eps": 1e-6
        },
        "category": "activation",
        "description": "SiLU激活函数",
        "data_types": ["bf16", "fp32"],
        "inputs": [
          {
            "name": "input",
            "data_type": "auto",
            "shape": [2, 2, 3],
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3],
          "data": [0.4629, 0.9258, 1.3887, 0.7895, 0.9869, 1.1843, 0.8705, 0.9948, 1.1192,
            0.9066, 0.9973, 1.0879]
        }
      },
      {
        "name": "embedding",
        "operator": {
          "name": "embedding"
        },
        "category": "embedding",
        "description": "嵌入层查找",
        "weights": [
          {
            "name": "embedding_table",
            "data_type": "bf16",
            "shape": [6, 4],
            "data": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4]
          }
        ],
        "inputs": [
          {
            "name": "indices",
            "data_type": "int32",
            "shape": [1, 3],
            "data": [0, 2, 4]
          }
        ],
        "expected_output": {
          "data_type": "bf16",
          "shape": [1, 3, 4],
          "data": [0.1, 0.2, 0.3, 0.4, 0.9, 1.0, 1.1, 1.2, 1.7, 1.8, 1.9, 2.0]
        }
      },
      {
        "name": "sdpa",
        "operator": {
          "name": "sdpa"
        },
        "category": "attention",
        "description": "缩放点积注意力",
        "data_types": ["fp32"],
        "inputs": [
          {
            "name": "query",
            "data_type": "auto",
            "shape": [2, 2, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055, 0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992, 0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922, 0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383, 0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141, 0.5352, 0.2422, 0.2461]
          },
          {
            "name": "key",
            "data_type": "auto",
            "shape": [2, 2, 3, 4],
            "data": [0.9961, 0.4180, 0.6328, 0.3555, 0.0820, 0.1953, 0.0273, 0.1250, 0.8750, 0.0078, 0.6719, 0.5234, 0.9570, 0.1758, 0.4062, 0.2539, 0.1836, 0.2344, 0.1719, 0.5625, 0.7773, 0.0039, 0.9297, 0.1172, 0.3359, 0.1797, 0.7773, 0.8398, 0.8164, 0.7227, 0.9375, 0.5195, 0.5703, 0.3125, 0.8438, 0.6719, 0.2148, 0.9570, 0.1953, 0.5078, 0.8711, 0.4688, 0.5547, 0.5195, 0.9492, 0.2383, 0.1367, 0.7617]
          },
          {
            "name": "value",
            "data_type": "auto",
            "shape": [2, 2, 3, 4],
            "data": [0.8242, 0.9023, 0.9297, 0.5391, 0.9609, 0.8633, 0.4570, 0.4375, 0.3242, 0.8164, 0.2070, 0.2461, 0.9102, 0.6641, 0.9102, 0.4375, 0.6211, 0.8984, 0.4883, 0.9570, 0.5547, 0.8125, 0.5625, 0.5234, 0.8516, 0.3008, 0.1797, 0.0000, 0.2539, 0.6953, 0.8594, 0.4258, 0.6523, 0.1328, 0.0625, 0.1641, 0.4297, 0.2266, 0.0898, 0.9805, 0.1094, 0.9727, 0.6016, 0.7383, 0.3867, 0.6523, 0.7148, 0.0664]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [2, 2, 3, 4],
          "data": [0.8242, 0.9023, 0.9297, 0.5391, 0.8789, 0.8906, 0.7539, 0.5000, 0.6719, 0.8594, 0.5508, 0.4062, 0.9102, 0.6641, 0.9102, 0.4375, 0.7617, 0.7852, 0.6914, 0.7070, 0.6992, 0.7812, 0.6641, 0.6094, 0.8516, 0.3008, 0.1797, 0.0000, 0.5234, 0.5195, 0.5547, 0.2344, 0.5664, 0.3906, 0.3906, 0.2080, 0.4297, 0.2266, 0.0898, 0.9805, 0.2471, 0.6523, 0.3809, 0.8438, 0.2988, 0.6445, 0.4922, 0.5781]
        }
      },
      {
        "name": "mqa",
        "operator": {
          "name": "multi-query-attention",
          "num_heads": 2,
          "num_kv_heads": 2
        },
        "data_types": ["bf16", "fp32"],
        "weights": [
          {
            "name": "q_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.1484, -0.4826, -0.4859,  0.4730, -0.1076, -0.2463, -0.1569,  0.3576,
              0.3582, -0.1965, -0.4001,  0.1800, -0.1998,  0.1233,  0.3885,  0.0978]
          },
          {
            "name": "k_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [0.1653,  0.1383,  0.4450,  0.2985,  0.2538, -0.0384,  0.4936,  0.3351,
              0.2034, -0.1849, -0.4125,  0.4013, -0.2621,  0.4411,  0.4977,  0.4758]
          },
          {
            "name": "v_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.3524,  0.1716, -0.3228,  0.1616, -0.2594, -0.1248,  0.0260, -0.1553,
              -0.1075,  0.0828, -0.0506, -0.4675,  0.1356, -0.2330, -0.1404, -0.3436]
          },
          {
            "name": "o_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.1405,  0.4678, -0.3980,  0.0495, -0.0243,  0.1211, -0.0727, -0.4991,
              -0.1128, -0.2605, -0.1747, -0.0434,  0.1043,  0.4352,  0.0059, -0.1135]
          }
        ],
        "biases": [
          {
            "name": "q_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [-0.1387,  0.1482, -0.3949,  0.2266]
          },
          {
            "name": "k_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [0.1136,  0.4863,  0.4718, -0.3648]
          },
          {
            "name": "v_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [0.2988, -0.0839, -0.0722, -0.3743]
          }
        ],
        "inputs": [
          {
            "name": "q",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          },
          {
            "name": "k",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          },
          {
            "name": "v",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [4, 3, 4],
          "data": [-0.0636, -0.2534,  0.0014,  0.1960, -0.0439, -0.2482,  0.0415,  0.1838,
            -0.0374, -0.2307,  0.0480,  0.1463, -0.0134, -0.3973,  0.1700,  0.1692,
            -0.0525, -0.3603,  0.0793,  0.2222, -0.0462, -0.3452,  0.0867,  0.2011,
            -0.0413, -0.3199,  0.1011,  0.1765, -0.0236, -0.2637,  0.1067,  0.1830,
            -0.0274, -0.2434,  0.0874,  0.1921, -0.0007, -0.2139,  0.1215,  0.1236,
            -0.0114, -0.2864,  0.1258,  0.1092, -0.0037, -0.2592,  0.1275,  0.1022]
        }
      },
      {
        "name": "mqa_with_rope",
        "operator": {
          "name": "multi-query-attention",
          "num_heads": 2,
          "num_kv_heads": 2,
          "seq_len": 3,
          "max_position_embeddings": 512,
          "rope_theta": 10000
        },
        "data_types": ["bf16", "fp32"],
        "weights": [
          {
            "name": "q_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.1484, -0.4826, -0.4859,  0.4730, -0.1076, -0.2463, -0.1569,  0.3576,
              0.3582, -0.1965, -0.4001,  0.1800, -0.1998,  0.1233,  0.3885,  0.0978]
          },
          {
            "name": "k_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [0.1653,  0.1383,  0.4450,  0.2985,  0.2538, -0.0384,  0.4936,  0.3351,
              0.2034, -0.1849, -0.4125,  0.4013, -0.2621,  0.4411,  0.4977,  0.4758]
          },
          {
            "name": "v_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.3524,  0.1716, -0.3228,  0.1616, -0.2594, -0.1248,  0.0260, -0.1553,
              -0.1075,  0.0828, -0.0506, -0.4675,  0.1356, -0.2330, -0.1404, -0.3436]
          },
          {
            "name": "o_proj",
            "data_type": "auto",
            "shape": [4, 4],
            "data": [-0.1405,  0.4678, -0.3980,  0.0495, -0.0243,  0.1211, -0.0727, -0.4991,
              -0.1128, -0.2605, -0.1747, -0.0434,  0.1043,  0.4352,  0.0059, -0.1135]
          }
        ],
        "biases": [
          {
            "name": "q_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [-0.1387,  0.1482, -0.3949,  0.2266]
          },
          {
            "name": "k_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [0.1136,  0.4863,  0.4718, -0.3648]
          },
          {
            "name": "v_proj",
            "data_type": "auto",
            "shape": [1, 4],
            "data": [0.2988, -0.0839, -0.0722, -0.3743]
          }
        ],
        "inputs": [
          {
            "name": "q",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          },
          {
            "name": "k",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          },
          {
            "name": "v",
            "data_type": "auto",
            "shape": [4, 3, 4],
            "data": [0.0820, 0.7773, 0.2305, 0.2930, 0.6289, 0.5938, 0.2930, 0.5625, 0.6055,
              0.2617, 0.5664, 0.0898, 0.9453, 0.6602, 0.8633, 0.6992, 0.0273, 0.6992,
              0.4844, 0.7305, 0.7539, 0.3594, 0.8047, 0.6367, 0.9102, 0.0586, 0.9922,
              0.9492, 0.9805, 0.4102, 0.0469, 0.9258, 0.5156, 0.5469, 0.1055, 0.7383,
              0.9805, 0.3125, 0.4180, 0.6094, 0.7617, 0.5352, 0.9023, 0.1875, 0.9141,
              0.5352, 0.2422, 0.2461]
          }
        ],
        "expected_output": {
          "data_type": "auto",
          "shape": [4, 3, 4],
          "data": [-0.0636, -0.2534,  0.0014,  0.1960, -0.0418, -0.2428,  0.0447,  0.1850,
            -0.0402, -0.2347,  0.0429,  0.1497, -0.0134, -0.3973,  0.1700,  0.1692,
            -0.0585, -0.3716,  0.0691,  0.2208, -0.0423, -0.3465,  0.0941,  0.1969,
            -0.0413, -0.3199,  0.1011,  0.1765, -0.0154, -0.2286,  0.1061,  0.1739,
            -0.0279, -0.2357,  0.0804,  0.1852, -0.0007, -0.2139,  0.1215,  0.1236,
            -0.0165, -0.2999,  0.1210,  0.1133, -0.0006, -0.2427,  0.1265,  0.0999]
        }
      }
    ]
  }
}